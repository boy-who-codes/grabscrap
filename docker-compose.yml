version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
      - sqlite_data:/app/db
    ports:
      - "80:8000"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  celery:
    build: .
    command: python manage_celery.py worker --loglevel=info
    volumes:
      - .:/app
      - media_files:/app/media
      - sqlite_data:/app/db
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  celery-beat:
    build: .
    command: python manage_celery.py beat --loglevel=info
    volumes:
      - .:/app
      - sqlite_data:/app/db
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  flower:
    build: .
    command: python manage_celery.py flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    depends_on:
      - redis

volumes:
  redis_data:
  media_files:
  static_files:
  sqlite_data:
